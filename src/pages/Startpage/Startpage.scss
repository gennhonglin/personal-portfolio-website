@use "../../styles/partials/mixins" as responsive;

@mixin sp-layout {
    @media screen and (max-width: 750px) {
        @content;
    }
}

@function random_range($min, $max) {
    $rand: random();
    $random_range: $min +floor($rand * (($max - $min) + 1));
    @return $random_range;
}


.Startpage {
    height: 100vh;
    background-color: #2E3047;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: absolute;
    top: 50%;
    transform: translate(0, -50%);
    overflow: hidden;

    &__header {
        box-sizing: border-box;
        padding-right: 1rem;
        padding-left: 1rem;
        width: 100%;
        margin: 0;
        font-size: 1.5rem;
        color: #FFFFFF;

        @include responsive.tablet {
            padding-right: 1.875rem;
            padding-left: 1.875rem;
            width: 80%;
            transform: translateX(15%);
        }
        
        @include responsive.desktop {
            padding-right: 3rem;
            padding-left: 3rem;
            width: 70%;
            transform: translateX(25%);
        }

        &__animation {
            &-scatter {
                text-align: justify;
                position: relative;
                display: inline-block;
                letter-spacing: 0.65px;

                @include responsive.tablet {
                    letter-spacing: 0.6px;
                }

                @include responsive.desktop {
                    letter-spacing: 1px;
                }
            }
            
            
        }
    }

    &__enter {
        text-align: center;
        font-size: 2.25rem;
        letter-spacing: 1.6px;

        @include responsive.tablet {
            font-size: 3rem;
        }

        @include responsive.desktop {
            font-size: 4rem;
            letter-spacing: 1px;
        }

        &-link {
            position: relative;
            display: inline-block;
            overflow: hidden;
            text-decoration: none;
            background: linear-gradient(to right, #FFFFFF, #FFFFFF 50%, #707793 50%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-size: 200% 100%;
            background-position: 100%;
            transition: background-position 800ms ease;
            color: #707793;

            &:hover {
                background-position: 0 100%;
            }

        }
    }

    .stars {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 10%;
        transform: rotate(-45deg);
    }

    .star {
        $star-count: 50;
        --star-color: var(--primary-color);
        --star-tail-length: 6em;
        --star-tail-height: 2px;
        --star-width: calc(var(--star-tail-length) / 6);
        --fall-duration: 9s;
        --tail-fade-duration: var(--fall-duration);

        position: absolute;
        top: var(--top-offset);
        left: 0;
        width: var(--star-tail-length);
        height: var(--star-tail-height);
        color: var(--star-color);
        background: linear-gradient(45deg, #FFFFFF, transparent);
        border-radius: 50%;
        filter: drop-shadow(0 0 6px #FFFFFF);
        transform: translate3d(104em, 0, 0);
        animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
        

        @include sp-layout {
            // For mobile performance, tail-fade animation will be removed QAQ
            animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
        }

        @for $i from 1 through $star-count {
            &:nth-child(#{$i}) {
                --star-tail-length: #{random_range(500em, 750em) / 100};
                --top-offset: #{random_range(0vh, 10000vh) / 100};
                --fall-duration: #{random_range(6000, 12000s) / 1000};
                --fall-delay: #{random_range(0, 10000s) / 1000};
            }
        }

        &::before,
        &::after {
            position: absolute;
            content: '';
            top: 0;
            left: calc(var(--star-width) / -2);
            width: var(--star-width);
            height: 100%;
            background: linear-gradient(45deg, transparent, #FFFFFF, transparent);
            border-radius: inherit;
            animation: blink 2s linear infinite;
        }

        &::before {
            transform: rotate(45deg);
        }

        &::after {
            transform: rotate(-45deg);
        }
    }
}


@keyframes fall {
    to {
        transform: translate3d(-60em, 0, 0);
    }
}

@keyframes tail-fade {

    0%,
    50% {
        width: var(--star-tail-length);
        opacity: 1;
    }

    70%,
    80% {
        width: 0;
        opacity: 0.4;
    }

    100% {
        width: 0;
        opacity: 0;
    }
}

@keyframes blink {
    50% {
        opacity: 0.6;
    }
}